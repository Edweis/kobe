<script>
  function computeStyle(amount){
    let max = 0
    document
      .querySelectorAll('[data-amount]')
      .forEach(el => {
         const candidate = Number(el.attributes['data-amount'].value)
         max = Math.max(Math.abs(candidate), max)
      })
    const ratio = 100 * amount / max
    const width = Math.abs(ratio / 2)
    const left = amount > 0 ? 50 : 50-width
    console.log({amount, ratio, max})
    return `width: ${width}%; left: ${left}%`
  }
  function computeExpenses(lines){
    const expenses = new Map()
    lines
      .flatMap(l => l.split.map(ll => ({ ...ll, paid: l.paid })))
      .forEach(({ participant, amount, paid }) => {
        expenses.set(paid, (expenses.get(paid) || 0) + Number(amount))
        expenses.set(participant, (expenses.get(participant) || 0) - Number(amount))
      });
    console.log('computeExpenses' , {lines:[...lines], expenses} )
    return [...expenses.entries()]
  }
</script>

<header>
  <h1>Balance</h1>
  <span x-text="project.name"></span>
</header>
<nav>
  <a :href="'/#projects/'+projectId" >Back</a>
  <a :href="'/#projects/'+projectId+'/reim'">Reimburse</a>
  <a :href="'/#projects/'+projectId+'/settings'">Settings</a>
</nav>
<div class="grid gap-2 mt-8" x-data="{ expenses: []}" x-effect="expenses = computeExpenses(lines)">
  <template x-for="expense in expenses">
  <article :class="expense[1]<0 && 'flex-row-reverse'" class="relative flex gap-8 py-2 items-center" x-data="{}" :data-amount="expense[1]">
    <div x-text="expense[0]" :class="expense[1]>=0 && 'text-right'" class="w-full"></div>
    <div x-text="toCurrency(project.currency, expense[1])" :class="expense[1]<0 && 'text-right'" class="w-full"></div>
    <div class="absolute bg-error/50 data-[positive]:bg-primary/30 h-full" :style="computeStyle(expense[1])" :data-positive="expense[1] > 0"></div>
  </article>
  <hr class=""></hr>
  </template>
</div>