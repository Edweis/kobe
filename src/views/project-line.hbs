<!DOCTYPE html>
<html>
<head>
  {{> common-head title="Project"}}
  <script>
  const round = (value, digits) => Number(value.toFixed(digits))
  const DECIMALS = 2
  function computeSplit() {
    const checked = document.querySelectorAll('input[data-included][type=checkbox]:checked')
    const total = Number(document.querySelector('input[name=amount]').value) ?? 0
    const indivAmount = checked.length === 0 ? 0 : round(total / checked.length, DECIMALS)
    let remaining = round(total - indivAmount * checked.length, DECIMALS) // remaining cents lost in rounding

    const nextSplit = []
    document.querySelectorAll('input[data-included][type=checkbox]').forEach(el => {
      const participant = el.attributes['data-included'].value
      let amount
      if (!el.checked) amount = 0
      else if (remaining !== 0) { // first person gets the extra cents
        amount = round(indivAmount + remaining, DECIMALS)
        remaining = 0
      }
      else amount = indivAmount
      nextSplit.push({ participant, amount })
    })
    return nextSplit
  }

  function computeAmount(participantChanged) {
    const total = Number(document.querySelector('input[name=amount]').value) ?? 0
    let allocated = total
    const nextSplit = []

    document.querySelectorAll('input[data-included][type=checkbox]').forEach(el => {
      if (!el.checked) return nextSplit.push({ participant, amount: 0 })

      const participant = el.attributes['data-included'].value;
      const inputForm = el.parentNode.querySelector('input[data-included][type=text]')
      const amount = Number(inputForm.value) || 0
      allocated -= amount
      nextSplit.push({ participant, amount, allocated })
    })

    if (allocated !== 0) {
      const participantIndex = nextSplit.findIndex(s => s.participant === participantChanged);
      const nextParticipant = (participantIndex + 1) % nextSplit.length
      nextSplit[nextParticipant].amount += allocated
      document.querySelector('input[data-included][type=text]').value += allocated
    }
    return nextSplit
  }
  </script>
</head>
<body hx-ext="response-targets">
  <section>  
    <header>
      <h1>{{default line.name 'New spending'}}</h1>
      <span>{{project.name}}</span>
    </header>
    <nav>
      <a href="..">Back</a>
    </nav>
    <form class="grid" hx-indicator="#loading" hx-post="/projects/{{project.id}}/lines" hx-sync="this:drop" hx-target-400="#error" x-data="{ method: '{{default method 'equally'}}', split: {{stringify split}} }">
      <input type="hidden" name="project_id" value="{{project.id}}"/>
      <input type="hidden" name="id" value="{{line.id}}"/>
      <label class="form-control">
        <span class="label label-text">Title</span>
        <input list="title-list" hx-trigger="keyup changed" hx-get="/projects/{{project.id}}/autocomplete" hx-target="next datalist" hx-swap="innerHTML" name="name" class="input input-bordered" autofocus="" autocomplete="off" required="" value="{{line.name}}" />
        <datalist id="title-list"></datalist>
      </label>
      <label class="form-control">
        <span class="label label-text">Amount</span>
        <div class="flex gap-2">
          <input value="{{line.amount}}" name="amount" class="input input-bordered grow" inputmode="decimal" pattern="[0-9.\-]*" type="text" required="" step="2" @input="split = computeSplit()" autocomplete="off"  />
          <select name="currency" class="select select-bordered" value="{{line.currency}}"> 
            <option>EUR</option>
            <option>SGD</option>
            <option>USD</option>
          </select>
        </div>
      </label>
      <label class="form-control">
        <span class="label label-text">Date</span>
        <input type="datetime-local" name="created_at" class="input input-bordered" value="{{trim-time line.created_at}}" />
      </label>
      <div class="flex gap-2">
        <label class="form-control grow">
          <span class="label label-text">Paid by</span>
          <div class="flex gap-2">
            <select name="paid" class="select select-bordered grow" >
              {{#each project.participants}}
              <option value="{{this}}" {{#if (eq this ../line.paid)}}selected=""{{/if}}>{{this}}</option>
              {{/each}}
            </select>
            <select class="select select-bordered" x-model="method" @change="if(method === 'equally') split = computeSplit()">
              <option value="equally">Equally</option>
              <option value="amount">As amount</option>
            </select>
          </div>
        </label>
      </div>
      <ul class="grid mt-4 border rounded-xl px-4 input-bordered">
        <template x-for="(part, index) in split">
        <label class="flex items-center gap-4 py-4 border-b last:border-b-0 input-bordered cursor-pointer">
          <input :id="part.participant" x-init="$el.checked = part.amount>0 || !{{default line.amount 0}}" type="checkbox" class="checkbox checkbox-primary" @click="split = computeSplit()" :data-included="part.participant"/>
          <span :for="part.participant" x-text="part.participant" class="flex items-center gap-4 whitespace-nowrap"></span>
          <input :name="'split['+index+'][participant]'" x-model="part.participant" type="hidden"/>
          <span x-show="method === 'equally'" x-text="part.amount" class="ml-auto"></span>
          <input x-show="method === 'amount'" :name="'split['+index+'][amount]'" x-model="part.amount" class="input input-bordered w-full" inputmode="numeric" pattern="[0-9.\-]*" type="text" :data-included="part.participant" @change="split = computeAmount(part.participant)"/>
          <span>{{project.currency}}</span>
        </label>
        </template>
      </ul>
      <div class="my-8 flex justify-start gap-8 flex-row-reverse">
        <button class="btn btn-primary loader" id="loading">
          Save
        </button>
        {{#if line.id}}
        <button type="button" class="btn btn-warning" hx-confirm="Are you ssssuuuure?" hx-delete="/projects/{{project.id}}/lines/{{line.id}}">Delete</button>
        {{/if}}
      </div>
      <span id="error" class="text-red-400 text-right"></span>
    </form>
  </section>
</body>
</html>
